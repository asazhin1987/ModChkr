<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   >

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml"/>
		<ResourceDictionary Source="Geometry.xaml"/>
		<ResourceDictionary Source="ToggleButton.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<!--<Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="12.5,0,25,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="toggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true"   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Popup.MinWidth>
                                <Binding Path="Width">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor" AncestorType="{x:Type ComboBox}"></RelativeSource>
                                    </Binding.RelativeSource>
                                </Binding>
                            </Popup.MinWidth>
                            <Grid>
                                <Border CornerRadius="12.5" Background="{StaticResource Gray2}" Margin="0,2"/>
                                <ScrollViewer Margin="0,2" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

	<Style x:Key="Combobox2" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="30"/>
		<Setter Property="MinHeight" Value="30"/>
		<Setter Property="VerticalAlignment" Value="Center"/> 
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Foreground" Value="{StaticResource TextColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="toggleButton" Style="{StaticResource ToggleButton31}" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

						<Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
							   Placement="Bottom">
							<Popup.MinWidth>
								<Binding Path="Width">
									<Binding.RelativeSource>
										<RelativeSource Mode="FindAncestor" AncestorType="{x:Type ComboBox}"></RelativeSource>
									</Binding.RelativeSource>
								</Binding>
							</Popup.MinWidth>
							<Grid>
								<Border Background="{StaticResource  Gray1}" Margin="0,2" Opacity="0.7" />
								<ScrollViewer Margin="0,2" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
						<ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="{StaticResource TextColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Gray1}"/>
		<Setter Property="Opacity" Value="1"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<Border.MinWidth>
							<Binding Path="Width">
								<Binding.RelativeSource>
									<RelativeSource Mode="FindAncestor" AncestorType="{x:Type ComboBox}"></RelativeSource>
								</Binding.RelativeSource>
							</Binding>
						</Border.MinWidth>
						<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12.5,0,0,0"/>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup>
								<VisualState x:Name="Normal">
									<Storyboard>
										<ColorAnimation Duration="0:0:0.1"  
                                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                                        To="White"/>
										<ColorAnimation Duration="0:0:0.1"  
                                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                                        To="White"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="0:0:0.1"  
                                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                                        To="{StaticResource color5}"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation Duration="0:0:0.1"  
                                                        Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                                        To="{StaticResource color5}"/>
										<ColorAnimation Duration="0:0:0.1"  
                                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" 
                                                        To="White"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>